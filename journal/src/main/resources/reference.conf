akka.persistence.spanner {

  project = "akka"
  instance = "akka"
  database = "akka"

  journal {
    class = "akka.persistence.spanner.SpannerJournal"

    # name of the table to use for events
    table = "journal"

    # name of the (interleaved) table used for tags
    event-tag-table = "tags"

    # name of the auxilary table used to store information about deletes
    deletions-table = "deletions"
  }

  #query
  query {
    class = "akka.persistence.spanner.SpannerReadJournalProvider"

    # When live queries return no results. How often to poll Spanner for new
    # rows
    refresh-interval = 3s
  }
  #query

  snapshot {
    class = "akka.persistence.spanner.SpannerSnapshotStore"
    table = "snapshots"
  }

  #durable-state
  durable-state-store {
    class = "akka.persistence.spanner.state.SpannerDurableStateStoreProvider"
    table = "objects"
    tag-column = "tag"
  }

  # config location for the grpc client.
  # located under akka.grpc.client
  grpc-client = "spanner-client"


  #session-pool
  session-pool {
    # the max number of sessions to create when connecting to spanner.
    # currently all of these sessions are created eagerly and kept alive.
    # called 'max-size' as future versions will likely have a dynamic
    # session pool
    max-size = 5

    # the max number of outstanding requests for sessions when the pool is
    # fully utilized
    max-outstanding-requests = 1000

    # How often to retry the batch create sessions on start up and also
    # how often to retry of a single session create in the event
    # of a NOT_FOUND being returned during keep alive. NOT_FOUND indicates
    # that the spanner server has deleted the session.
    retry-create-interval = 2s

    # If the pool encounters an unexpected error, how long to backoff for before
    # re-creating the pool from scratch. For expected errors such as the intitial
    # batch session creation set other specific intervals
    restart-min-backoff = 1s
    restart-max-backoff = 10s

    # How often to send a dummy query for each session to keep it alive
    # Spanner drops sessions after 60 minutes
    keep-alive-interval = 25 minutes

    # Internal between each log of stats
    # set to off to disable
    stats-interval = off
    # Stats logger to use, set this logger to DEBUG in your configuration
    # to see the stats logging
    stats-logger = "akka.persistence.spanner.SessionPool.stats"

    # Keep lower than coordinated shutdown stage timeout
    # if sessions aren't returned within this timeout then they
    # are deleted meaning in progress queries will fail
    shutdown-timeout = 3s
  }

  # set to false for running with the spanner emulator
  use-auth = true

  # Fail a request if a session cannot be acquired within this timeout
  session-acquisition-timeout = 5 s

  # If a write fails retry at most this many times
  # also time capped within the retry interval. Note that the timeout is in concert with
  # the akka persistence circuit breaker call timeout
  max-write-retries = 3
  max-write-retry-timeout = 10s

}
#session-pool

#grpc
akka.grpc.client.spanner-client {
  host = spanner.googleapis.com
  port = 443
}
#grpc

# Serialized SpannerOffset is used by Akka Projections
akka {
  actor {
    serialization-identifiers {
      "akka.persistence.spanner.internal.SpannerSerializer" = 45074320
    }
    serializers {
      akka-persistence-spanner = "akka.persistence.spanner.internal.SpannerSerializer"
    }
    serialization-bindings {
      "akka.persistence.spanner.SpannerOffset" = akka-persistence-spanner
    }
  }
}
